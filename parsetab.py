
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftSOMASUBleftMULTDIVATRIB CHAR CHAR_LITERAL COMMENT DIV ELSE EQ FIM FLOAT GT GTE ID IF INPUT INT LBRACE LPAREN LT LTE MULT NEQ NUM PRINT RBRACE RPAREN SOMA STRING SUBprogram : statements FIMstatement : type ID ATRIB expressiontype : INT\n| CHARstatements : statements statementstatements : statementstatement : ID ATRIB expressionstatement : PRINT expressionstatement : INPUT LPAREN RPARENstatement : IF LPAREN condition RPAREN block else_clauseblock : LBRACE statements RBRACEelse_clause : ELSE block\n| emptyexpression : expression SOMA expression\n| expression SUB expression\n| expression MULT expression\n| expression DIV expressionexpression : LPAREN expression RPARENexpression : NUM\n| FLOATexpression : STRINGexpression : CHAR_LITERALexpression : IDcondition : expression relational_operator expressionrelational_operator : EQ\n| NEQ\n| LT\n| GT\n| LTE\n| GTEempty :'
    
_lr_action_items = {'ID':([0,2,3,4,6,9,10,12,14,15,16,17,18,19,20,21,23,24,25,26,27,28,29,31,34,35,36,37,38,39,41,42,43,44,45,46,47,48,49,51,53,54,55,56,],[5,5,-6,13,21,-3,-4,-5,21,-8,21,-19,-20,-21,-22,-23,21,21,-7,21,21,21,21,-9,-2,-14,-15,-16,-17,-18,21,-25,-26,-27,-28,-29,-30,-31,5,-10,-13,5,-12,-11,]),'PRINT':([0,2,3,12,15,17,18,19,20,21,25,31,34,35,36,37,38,39,48,49,51,53,54,55,56,],[6,6,-6,-5,-8,-19,-20,-21,-22,-23,-7,-9,-2,-14,-15,-16,-17,-18,-31,6,-10,-13,6,-12,-11,]),'INPUT':([0,2,3,12,15,17,18,19,20,21,25,31,34,35,36,37,38,39,48,49,51,53,54,55,56,],[7,7,-6,-5,-8,-19,-20,-21,-22,-23,-7,-9,-2,-14,-15,-16,-17,-18,-31,7,-10,-13,7,-12,-11,]),'IF':([0,2,3,12,15,17,18,19,20,21,25,31,34,35,36,37,38,39,48,49,51,53,54,55,56,],[8,8,-6,-5,-8,-19,-20,-21,-22,-23,-7,-9,-2,-14,-15,-16,-17,-18,-31,8,-10,-13,8,-12,-11,]),'INT':([0,2,3,12,15,17,18,19,20,21,25,31,34,35,36,37,38,39,48,49,51,53,54,55,56,],[9,9,-6,-5,-8,-19,-20,-21,-22,-23,-7,-9,-2,-14,-15,-16,-17,-18,-31,9,-10,-13,9,-12,-11,]),'CHAR':([0,2,3,12,15,17,18,19,20,21,25,31,34,35,36,37,38,39,48,49,51,53,54,55,56,],[10,10,-6,-5,-8,-19,-20,-21,-22,-23,-7,-9,-2,-14,-15,-16,-17,-18,-31,10,-10,-13,10,-12,-11,]),'$end':([1,11,],[0,-1,]),'FIM':([2,3,12,15,17,18,19,20,21,25,31,34,35,36,37,38,39,48,51,53,55,56,],[11,-6,-5,-8,-19,-20,-21,-22,-23,-7,-9,-2,-14,-15,-16,-17,-18,-31,-10,-13,-12,-11,]),'RBRACE':([3,12,15,17,18,19,20,21,25,31,34,35,36,37,38,39,48,51,53,54,55,56,],[-6,-5,-8,-19,-20,-21,-22,-23,-7,-9,-2,-14,-15,-16,-17,-18,-31,-10,-13,56,-12,-11,]),'ATRIB':([5,13,],[14,24,]),'LPAREN':([6,7,8,14,16,23,24,26,27,28,29,41,42,43,44,45,46,47,],[16,22,23,16,16,16,16,16,16,16,16,16,-25,-26,-27,-28,-29,-30,]),'NUM':([6,14,16,23,24,26,27,28,29,41,42,43,44,45,46,47,],[17,17,17,17,17,17,17,17,17,17,-25,-26,-27,-28,-29,-30,]),'FLOAT':([6,14,16,23,24,26,27,28,29,41,42,43,44,45,46,47,],[18,18,18,18,18,18,18,18,18,18,-25,-26,-27,-28,-29,-30,]),'STRING':([6,14,16,23,24,26,27,28,29,41,42,43,44,45,46,47,],[19,19,19,19,19,19,19,19,19,19,-25,-26,-27,-28,-29,-30,]),'CHAR_LITERAL':([6,14,16,23,24,26,27,28,29,41,42,43,44,45,46,47,],[20,20,20,20,20,20,20,20,20,20,-25,-26,-27,-28,-29,-30,]),'SOMA':([15,17,18,19,20,21,25,30,33,34,35,36,37,38,39,50,],[26,-19,-20,-21,-22,-23,26,26,26,26,-14,-15,-16,-17,-18,26,]),'SUB':([15,17,18,19,20,21,25,30,33,34,35,36,37,38,39,50,],[27,-19,-20,-21,-22,-23,27,27,27,27,-14,-15,-16,-17,-18,27,]),'MULT':([15,17,18,19,20,21,25,30,33,34,35,36,37,38,39,50,],[28,-19,-20,-21,-22,-23,28,28,28,28,28,28,-16,-17,-18,28,]),'DIV':([15,17,18,19,20,21,25,30,33,34,35,36,37,38,39,50,],[29,-19,-20,-21,-22,-23,29,29,29,29,29,29,-16,-17,-18,29,]),'RPAREN':([17,18,19,20,21,22,30,32,35,36,37,38,39,50,],[-19,-20,-21,-22,-23,31,39,40,-14,-15,-16,-17,-18,-24,]),'EQ':([17,18,19,20,21,33,35,36,37,38,39,],[-19,-20,-21,-22,-23,42,-14,-15,-16,-17,-18,]),'NEQ':([17,18,19,20,21,33,35,36,37,38,39,],[-19,-20,-21,-22,-23,43,-14,-15,-16,-17,-18,]),'LT':([17,18,19,20,21,33,35,36,37,38,39,],[-19,-20,-21,-22,-23,44,-14,-15,-16,-17,-18,]),'GT':([17,18,19,20,21,33,35,36,37,38,39,],[-19,-20,-21,-22,-23,45,-14,-15,-16,-17,-18,]),'LTE':([17,18,19,20,21,33,35,36,37,38,39,],[-19,-20,-21,-22,-23,46,-14,-15,-16,-17,-18,]),'GTE':([17,18,19,20,21,33,35,36,37,38,39,],[-19,-20,-21,-22,-23,47,-14,-15,-16,-17,-18,]),'LBRACE':([40,52,],[49,49,]),'ELSE':([48,56,],[52,-11,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statements':([0,49,],[2,54,]),'statement':([0,2,49,54,],[3,12,3,12,]),'type':([0,2,49,54,],[4,4,4,4,]),'expression':([6,14,16,23,24,26,27,28,29,41,],[15,25,30,33,34,35,36,37,38,50,]),'condition':([23,],[32,]),'relational_operator':([33,],[41,]),'block':([40,52,],[48,55,]),'else_clause':([48,],[51,]),'empty':([48,],[53,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statements FIM','program',2,'p_program','pokemon.py',466),
  ('statement -> type ID ATRIB expression','statement',4,'p_statement_vardecl','pokemon.py',470),
  ('type -> INT','type',1,'p_type','pokemon.py',474),
  ('type -> CHAR','type',1,'p_type','pokemon.py',475),
  ('statements -> statements statement','statements',2,'p_statements_multiple','pokemon.py',479),
  ('statements -> statement','statements',1,'p_statements_single','pokemon.py',483),
  ('statement -> ID ATRIB expression','statement',3,'p_statement_assignment','pokemon.py',487),
  ('statement -> PRINT expression','statement',2,'p_statement_print','pokemon.py',491),
  ('statement -> INPUT LPAREN RPAREN','statement',3,'p_statement_input','pokemon.py',495),
  ('statement -> IF LPAREN condition RPAREN block else_clause','statement',6,'p_statement_if','pokemon.py',499),
  ('block -> LBRACE statements RBRACE','block',3,'p_block','pokemon.py',503),
  ('else_clause -> ELSE block','else_clause',2,'p_else_clause','pokemon.py',507),
  ('else_clause -> empty','else_clause',1,'p_else_clause','pokemon.py',508),
  ('expression -> expression SOMA expression','expression',3,'p_expression_binop','pokemon.py',515),
  ('expression -> expression SUB expression','expression',3,'p_expression_binop','pokemon.py',516),
  ('expression -> expression MULT expression','expression',3,'p_expression_binop','pokemon.py',517),
  ('expression -> expression DIV expression','expression',3,'p_expression_binop','pokemon.py',518),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','pokemon.py',522),
  ('expression -> NUM','expression',1,'p_expression_number','pokemon.py',526),
  ('expression -> FLOAT','expression',1,'p_expression_number','pokemon.py',527),
  ('expression -> STRING','expression',1,'p_expression_string','pokemon.py',531),
  ('expression -> CHAR_LITERAL','expression',1,'p_expression_char','pokemon.py',535),
  ('expression -> ID','expression',1,'p_expression_id','pokemon.py',540),
  ('condition -> expression relational_operator expression','condition',3,'p_condition','pokemon.py',544),
  ('relational_operator -> EQ','relational_operator',1,'p_relational_operator','pokemon.py',548),
  ('relational_operator -> NEQ','relational_operator',1,'p_relational_operator','pokemon.py',549),
  ('relational_operator -> LT','relational_operator',1,'p_relational_operator','pokemon.py',550),
  ('relational_operator -> GT','relational_operator',1,'p_relational_operator','pokemon.py',551),
  ('relational_operator -> LTE','relational_operator',1,'p_relational_operator','pokemon.py',552),
  ('relational_operator -> GTE','relational_operator',1,'p_relational_operator','pokemon.py',553),
  ('empty -> <empty>','empty',0,'p_empty','pokemon.py',557),
]
